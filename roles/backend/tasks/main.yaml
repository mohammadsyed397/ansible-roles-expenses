- name: Disable nodejs module
  ansible.builtin.command: "dnf module disable nodejs -y"
- name: Enable nodejs.20 module
  ansible.builtin.command: "dnf module enable nodejs:20 -y"
- name: Install nodejs.20 module
  ansible.builtin.dnf:
   name: nodejs
   state: present
- name: create expense system user
  ansible.builtin.user:
    name: expense
    shell: /sbin/nologin
    system: true
    home: /app
    comment: "expense user"
- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory
- name: download the app code
  ansible.builtin.get_url:
   url: "https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip"
   dest: "/tmp/backend-v2.zip" 
- name: extract the code to app directory
  ansible.builtin.unarchive:
    src: "/tmp/backend-v2.zip"
    dest: /app
    remote_src: yes
- name: install the dependencies
  community.general.npm:
   path: /app
- name: "copy the backend  service to systemd" 
  ansible.builtin.template:
    src: "backend.service.j2"
    dest: "/etc/systemd/system/backend.service"

- name: systemctl daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true
  
- name: "enable and restart backend service"
  ansible.builtin.service:
    name: "backend"
    state: restarted 
    enabled: yes
- name: Install PyMySQL for Ansible MySQL modules
  ansible.builtin.pip:
    name: PyMySQL
    executable: pip3

- name: install mysql
  ansible.builtin.dnf:
   name: mysql
   state: present
- name: import data
  community.mysql.mysql_db:
    name: all
    login_user: "{{ MYSQL_ROOT_USER }}"
    login_password: "{{ MYSQL_ROOT_PASSWORD }}"
    login_host: "{{ MYSQL_HOST }}"
    state: import
    target: 
    - /app/schema/backend.sql
- name: system daemon reload
  ansible.builtin.service:
    name: "backend"
    state: restarted
    enabled: yes