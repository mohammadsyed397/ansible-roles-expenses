- name: Disable nodejs module
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable nodejs:20 module
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: present

- name: Create expense system user
  ansible.builtin.user:
    name: expense
    shell: /sbin/nologin
    system: true
    home: /app
    comment: "expense user"

- name: Create app directory
  ansible.builtin.file:
    path: /app
    state: directory
    

- name: Download the app code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend-v2.zip

- name: Extract the code to app directory
  ansible.builtin.unarchive:
    src: /tmp/backend-v2.zip
    dest: /app
    remote_src: yes
    

- name: Install Node.js dependencies
  community.general.npm:
    path: /app

- name: Copy the backend systemd service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Install MySQL client
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: Import backend schema into MySQL
  community.mysql.mysql_db:
    name: all
    state: import
    target: /app/schema/backend.sql
    login_user: "{{ MYSQL_ROOT_USER }}"
    login_password: "{{ MYSQL_ROOT_PASSWORD }}"
    login_host: "{{ MYSQL_HOST }}"


- name: Restart backend service again after DB import
  ansible.builtin.service:
    name: backend
    state: restarted
    enabled: yes
